#!groovy

/*

This Jenkins job runs a build on OSX

See https://ci.tjhei.info/job/aspect-osx/ for details.

*/

/*
Settings to apply inside Jenkins:
  - discover pull requests (remove branches/master)
  - Strategy: merged PR
  - enable "Disable GitHub Multibranch Status Plugin"
  - trigger build on pull request comment: .* /rebuild.* (without space!)
  - Jenkinsfile: choose Jenkinsfile.osx
  - scan: every 4 hours
  - discard: 5+ items
*/

// load library https://github.com/tjhei/jenkins-stuff to provide
// killold.killOldBuilds() function:
@Library('tjhei') _

pipeline
{
  agent none

  stages
  {
    stage("abort old")
    {
      agent none
      steps
      {
        githubNotify context: 'Jenkins: OSX', description: 'initializing...',  status: 'PENDING'
        // kill older builds in this PR:
        script { killold.killOldBuilds() }
      }
    }

    stage("main")
    {
      agent
      {
        node
        {
          label 'osx'
        }
      }

      post { cleanup { cleanWs() } }

      stages
      {
        stage ("Check Permissions") {
        when {
          // check for "ready to test" if it is a PR and not by one of the people listed
          allOf {
            changeRequest()
            not {changeRequest authorEmail: "rene.gassmoeller@mailbox.org"}
            not {changeRequest authorEmail: "timo.heister@gmail.com"}
            not {changeRequest authorEmail: "bangerth@colostate.edu"}
            not {changeRequest authorEmail: "judannberg@gmail.com"}
            not {changeRequest authorEmail: "ja3170@columbia.edu"}
            not {changeRequest authorEmail: "jbnaliboff@ucdavis.edu"}
            not {changeRequest authorEmail: "menno.fraters@tutanota.com"}
            not {changeRequest authorEmail: "a.c.glerum@uu.nl"}
            not {changeRequest authorEmail: "myhill.bob@gmail.com"}
            not {changeRequest authorEmail: "ljhwang@ucdavis.edu"}
          }
        }
        steps {
          // For /rebuild to work you need to:
          // 1) select "issue comment" to be delivered in the github webhook setting
          // 2) install "GitHub PR Comment Build Plugin" on Jenkins
          // 3) in project settings select "add property" "Trigger build on pr comment" with
          //    the phrase ".*/rebuild.*" (without quotes)
          sh '''
          wget -q -O - https://api.github.com/repos/geodynamics/aspect/issues/${CHANGE_ID}/labels | grep 'ready to test' || \
          { echo "This commit will only be tested when it has the label 'ready to test'. Trigger a rebuild by adding a comment that contains '/rebuild'..."; exit 1; }
          '''
        }
        post
        {
          failure
          {
            githubNotify context: 'Jenkins: OSX', description: 'need ready to test label and /rebuild',  status: 'PENDING'
            script
            {
              currentBuild.result='NOT_BUILT'
            }
          }
        }
        }

        stage('build')
        {
          steps
          {
            timeout(time: 2, unit: 'HOURS')
            {
              sh "echo \"building on node ${env.NODE_NAME}\""
              sh '''#!/bin/bash
                    set -e
                    set -x
                    mkdir build && cd build
                    cmake \
                      -D DEAL_II_CXX_FLAGS='-Werror' \
                      $WORKSPACE/
                    make -j 8
                    ctest --output-on-failure
                 '''
              githubNotify context: 'Jenkins: OSX', description: 'OK',  status: 'SUCCESS'
            }
          }

          post
          {
            always
            {
              archiveArtifacts artifacts: 'build/detailed.log', fingerprint: true
            }

            failure
            {
              githubNotify context: 'Jenkins: OSX', description: 'build failed',  status: 'FAILURE'
            }
          }
        }

      }
    }
  }
}
